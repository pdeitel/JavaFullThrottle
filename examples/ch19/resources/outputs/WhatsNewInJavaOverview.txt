Welcome to the What's New in Java lesson. In this lesson I have about two and a half hours of new video with new examples that will be appearing in our forthcoming new editions of our Java suite of products and that includes the new edition of this video course, Java Fundamentals Third Edition, Java How to Program Twelfth Edition, our Java textbook, and Java for Programmers Fifth Edition, our corresponding professional book as well. Throughout these videos I'll be presenting various key Java programming features from Java 10 through Java 22 and I'll have a slide on one Java 23 feature as well that's related to some of the other examples that I'll be presenting to you here. These videos in the What's New lesson are targeted to existing lessons in the current product where the features in question could potentially be used. That does not necessarily reflect where they'll appear in the new suite of products, but it's a relatively good guess as to where they'll appear. And as we produce the new versions of these videos, we will post the new lessons online and eventually this lesson will go away as we meld the new features into the new presentation as well. So the various features are labeled with which Java version they were introduced in. That may be important to you as a developer because you may be required to use a specific version of the Java platform. For example, the current long-term support release is Java 21. Therefore, if you're using Java 21, you won't be able to take advantage of Java 22 features. And some people are still on previous versions of Java as well, such as the long-term support release Java 17, the long-term support release Java 11, or even going all the way back to Java 8 as well. So obviously if you're in one of those earlier versions for a project that you're working on, you will not be able to take advantage of some of the later features. As you work your way through this lesson, if you have any questions on these new features, feel free to reach out to me at paul.dytel.com and I'll try to respond to you promptly. You can also check out our dytel.com website for updates on what's going on and we'll post messages into our various social media channels as well as new content becomes available. Here's the proposed outline for the third edition of this video course. We will be starting with the fundamentals in lessons 1 through 8. We'll begin by demonstrating how to test drive a Java application. Actually, we'll do that several different ways. Then we'll get into the actual Java programming in lesson 2, and in lessons 3 and 4 we'll focus on most but not all of Java's control statements. There are a couple that make sense to cover in later lessons. Next up we'll take a look at method definitions in Java. Then we'll start getting into data structures with the built-in array data structure and the ArrayListCollection class, which is one of many different collections that come built into the Java APIs. As part of this new version of lesson 6, we'll be introducing some functional programming concepts in Java as well, with the lambdas and streams capabilities that were introduced in Java 8. We'll move on to some string character and regular expression processing, and we'll finish off the fundamentals section with some files and Iostreams capabilities. As part of that lesson, we'll also get into comma-separated value files, which is a popular format for representing data sets nowadays, and also JavaScript object notation, which is the most popular format used to transmit data back and forth over the internet when you have applications that are talking to what are known as web services, which are basically functions that you call on servers around the internet to perform tasks for you and possibly give you back results as well. Next up we'll move into the object-oriented programming portion of the course with custom classes and objects. We'll then talk about how to create new classes from existing ones via inheritance and the capability of polymorphism, which allows us to process a bunch of objects of related classes as if they're all objects of the superclass in a hierarchy. We'll talk more in the next lesson about interfaces, specifically showing you how to create your own custom interfaces, and also working with some of the Java API's interface capabilities as well. Those interface capabilities are critical in hierarchy design nowadays, but they are also critical in all sorts of different areas of Java application development. It's critical that everyone be familiar with the concepts of interfaces and how to use them as well. We'll finish up the object-oriented programming portion with a deeper look at exception handling, which we'll actually introduce initially back in lesson 6 and we'll use a little bit as well in some of the earlier object-oriented programming chapters. Next up we'll move on to generic programming. We'll take a look at several different generic collections, of which array lists are one. The generic collections allow you to specify when you create objects of those collections, the type of elements that they'll store, and we'll also take a look at how to create your own custom generic classes and methods as well. Next up we have a segment on JavaFX, graphical user interfaces, graphics, and multimedia. We've got a three-lesson run on that. JavaFX is the modern Java graphical user interface set of capabilities that also includes graphics and multimedia capabilities. It's highly customizable, which is one of the benefits of using it, and so we'll take a look at a number of examples using those capabilities. Unfortunately, JavaFX is not built into the Java development kit, so as part of our new and updated Before You Begin lesson, we'll talk about how to get the JavaFX capabilities installed so that you can take advantage of them as part of your Java development. And then finally we have a number of high-end topics, including a deeper look at functional programming in Java with lambdas and streams. You'll notice that there's the word streams here, but we also have the word streams back in Lesson 8. Those are two different concepts. In the case of Lesson 8, it's the concepts of bytes or characters being written out of a program or read into a program. In the case of functional programming, the concept of a stream is simply the idea of elements moving their way through a pipeline of operations, and that's just an entirely different concept. We will have a brand new lesson on generative AI, which of course is super hot right now. We'll show you how to actually programmatically interact with generative AIs in the Java programming language, and we'll actually incorporate a number of concepts from generative AI throughout many of the lessons in the new edition as well. We have an extensive lesson on concurrency and multi-core performance, and this is one of the areas in which there are a bunch of new capabilities. We'll actually have a whole separate new lesson that we will publish before the full new version of the Java Fundamentals course of the concurrency lesson in which we'll introduce those new features so people can start using them right away. We'll have a databases lesson for interacting with databases via JDBC, and then back in Java 9, they introduced the Java Platform Module System, which has had a few changes along the way since then, so we'll be updating that as well. And finally, we'll finish off with a lesson on using Java's JShell tool for interactive Java development at the command line, and that's kind of handy not only for learning but also for testing purposes. You can, for example, load up a library into JShell and work with it in a snippet-oriented way without having to create full-blown applications to test out various features, so it can be quite handy for developers to play around, if you will.